# -*- Python -*-
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                   Jiao Lin
#                      California Institute of Technology
#                      (C) 2008-2014  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


"""
converte events.dat to nexus file.

events.dat are generated by mcvine simulation that sends scattereted neutrons
to a detector system.

"""

def run(eventfile, tofbinsize, nxsfile, type, instrument):
    print (eventfile, nxsfile)
    from mccomponents.detector.event_utils import readEvents
    events = readEvents(eventfile)
    
    prefix = 'mcvine.instruments.%s.nxs' % instrument.upper()
    mod = '%s.%s' % (prefix, type)
    mod = __import__(mod, fromlist = [''])
    mod.write(events, tofbinsize, nxsfile)
    return



from pyre.applications.Script import Script as AppBase
class App(AppBase):

    class Inventory(AppBase.Inventory):

        import pyre.inventory
        events = pyre.inventory.str('events', default='events.dat')
        nxs = pyre.inventory.str('nxs', default='sim.nxs')
        type = pyre.inventory.str('type', default='raw')
        tofbinsize = pyre.inventory.float('tofbinsize', default=0.1) # unit: microsecond
        instrument = pyre.inventory.str('instrument')
        
        
    def main(self):
        events = self.inventory.events
        nxs = self.inventory.nxs
        type = self.inventory.type
        tofbinsize = self.inventory.tofbinsize
        instrument = self.inventory.instrument
        run(events, tofbinsize, nxs, type=type, instrument=instrument)
        return
    

#
# version
__id__ = "$Id$"

# End of file 
