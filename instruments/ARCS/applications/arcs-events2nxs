#!/usr/bin/env python


"""
converte events.dat to nexus file.

events.dat are generated by mcvine simulation that sends scattereted neutrons
to ARCS detector system.

"""

appname = 'arcs-events2nxs'


def execute(cmd):
    import os
    print '* executing %s... ' % cmd
    if os.system(cmd):
        raise RuntimeError, "%r failed" % cmd


import numpy as np

def run(eventfile, nxsfile, type):
    print (eventfile, nxsfile)
    from mccomponents.detector.event_utils import readEvents
    events = readEvents(eventfile)
    
    prefix = 'mcvine.instruments.ARCS.nxs'
    mod = '%s.%s' % (prefix, type)
    mod = __import__(mod, fromlist = [''])
    mod.write(events, nxsfile)
    return


# constants
mod2sample_distance = 13.6

import pyre.units.length
import pyre.units.energy
import pyre.units.time
mod2sample=13.6*pyre.units.length.meter
mod_period=0.015*pyre.units.time.s # moderator period


from pyre.applications.Script import Script as AppBase
class App(AppBase):

    class Inventory(AppBase.Inventory):

        import pyre.inventory
        events = pyre.inventory.str('events', default='events.dat')
        nxs = pyre.inventory.str('nxs', default='arcs-sim.nxs')
        type = pyre.inventory.str('type', default='processed')

        
    def main(self):
        events = self.inventory.events
        nxs = self.inventory.nxs
        type = self.inventory.type
        run(events, nxs, type=type)
        return
    

def main():
    app = App(appname)
    app.run()
    return


interactive = False

if __name__ == '__main__': 
    interactive = True
    main()
