#!/usr/bin/env python

from pyre.applications.Script import Script


class App(Script):


    class Inventory(Script.Inventory):

        import pyre.inventory
        
        inputfiles = pyre.inventory.list('files')
        output = pyre.inventory.str('output')
        
        pass

    
    def main(self, *args, **kwds):
        import os, glob, operator

        ifiles = self.inventory.inputfiles
        ifiles = [glob.glob(f) for f in ifiles]
        ifiles = reduce(operator.add, ifiles)
        
        for f in ifiles:
            if not os.path.exists(f):
                raise RuntimeError, '%s does not exist' % f
            
        output = self.inventory.output
        if os.path.exists(output):
            raise RuntimeError, '%s already exists' % output
        
        from mcni.neutron_storage.merge import merge
        merge(ifiles, output)
        return



def main():
    app = App('mcvine-neutron-storage-merge')
    app.run()
    return


if __name__ == '__main__': main()

