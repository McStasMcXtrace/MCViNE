#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                 Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2011  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from luban.content import load, select, alert
import luban.content as lc

from luban.components.Actor import Receptionist as base


class Actor(base):


    class Inventory(base.Inventory):

        import pyre.inventory

        visual = pyre.inventory.str(name='visual')


    def default(self, director):
        visual = self.inventory.visual
        kwds = {}
        for k, v in self.inventory.__dict__.iteritems():
            if k.startswith('_'): continue
            if hasattr(self.Inventory, k): continue
            kwds[k] = v
            continue
        return director.retrieveVisual(visual, director=director,**kwds)


    def debug(self, director):
        frame = lc.frame()
        vis = self.default(director)
        frame.add(vis)
        return frame

    
    def __init__(self, name='loadvisual'):
        super(Actor, self).__init__(name)
        return


def actor(): return Actor()


# version
__id__ = "$Id$"

# End of file 

